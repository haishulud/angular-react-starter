name: testCI

on:
  workflow_dispatch: #manual start from Github UI
  
jobs:
  test_job:
    runs-on: ubuntu-latest
    permissions:      
      contents: read  #permissions for publishing Docker images to Github Packages
      packages: write #permissions for publishing Docker images to Github Packages
      #actions: read   #permissions for GitHub Apps to extract workflow execution time via REST API

    steps:
      - name: Job's running time
        id: execution_time
        #run: curl https://api.github.com/repos/haishulud/angular-react-starter/actions/runs/2709362699/timing
        #run: curl https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/timing
        #run: |
          #curl \
            #-H "Accept: application/vnd.github+json" \ 
            #-H "Authorization: token ${{ secrets.API_TOKEN }}" \
            #https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/timing

        #run: >
          #curl -H "Accept: application/vnd.github+json"
          #https://api.github.com/repos/${{ github.repository }}/actions/runs/2709362699/timing
          #| jq '.run_duration_ms'

        run: |
          echo "::set-output name=runningtime::$(curl -H "Accept: application/vnd.github+json" https://api.github.com/repos/${{ github.repository }}/actions/runs/2709362699/timing | jq '.run_duration_ms')"
      
      - name: print variable
        run: echo ${{steps.execution_time.outputs.runningtime}}
      - name: calculate time
        run: |
          started_at='2020-01-20T17:42:40Z'
          completed_at='2020-01-20T17:42:50Z'

          START_TIME=$(date -d "$started_at" +%s)
          END_TIME=$(date -d "$completed_at" +%s)

          ELAPSE=$(( $END_TIME - $START_TIME ))
          echo $ELAPSE
          echo "$(($ELAPSE/60/60))h $(($ELAPSE/60))m $(($ELAPSE%60))s $(($ELAPSE))s"